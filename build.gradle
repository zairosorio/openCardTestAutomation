repositories {
    jcenter()
    mavenCentral()
}

buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.2.0")
    }
}

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: 'java-library'
apply plugin: 'jacoco'
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

dependencies {
    compile 'net.serenity-bdd:serenity-cucumber:1.9.5'
    compile group: 'net.serenity-bdd', name: 'serenity-core', version: '2.0.52'
    compile group: 'net.serenity-bdd', name: 'serenity-junit', version: '2.0.52'
    testImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    implementation group: 'net.serenity-bdd', name: 'serenity-report-resources', version: '1.0.28'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    implementation group: 'com.jayway.jsonpath', name: 'json-path', version: '2.4.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/com.github.javafaker/javafaker
    implementation group: 'com.github.javafaker', name: 'javafaker', version: '1.0.2'


}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

test {
    useJUnit {
        maxParallelForks=2
        include "**/*Runner*";
        gradle.startParameter.continueOnFailure = true
        testLogging.showStandardStreams = true
        systemProperties System.getProperties()
    }

    jacoco {
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.5
            }
        }
    }
}
